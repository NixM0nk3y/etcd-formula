# -*- coding: utf-8 -*-
# vim: ft=jinja
{% import_yaml 'etcd/defaults.yaml' as defaults %}
{% import_yaml "etcd/osmap.yaml" as osmap %}

# start with defaults, merge osmap, then pillar data
{% set etcd = salt['grains.filter_by'](
    defaults,
    merge=salt['grains.filter_by'](
        osmap,
        grain='os',
        merge=salt['pillar.get']('etcd', {}),
    ),
    base='etcd',
) %}

# coreos release package
{% set pkg = "{0}-v{1}-{2}-{3}".format(etcd.pkg or 'etcd', etcd.version, etcd.os, etcd.arch) %} 
{% do etcd.dl.update(
       { 'src_url': "{0}/v{1}/{2}.{3}".format(etcd.dl.base_uri, etcd.version, pkg, etcd.dl.format),
         'archive_name': pkg + '.' + etcd.dl.format, }) %}
{% do etcd.update({ 'realhome': "{0}/{1}".format(etcd.prefix, pkg), 'pkg': pkg, }) %}

# coreos release docker
{% set args = " -name " ~ etcd.service.name ~ " -advertise-client-urls " ~ etcd.service.advertise_client_urls ~ " -listen-client-urls " ~ etcd.service.listen_client_urls ~ " -initial-advertise-peer-urls " ~ etcd.service.initial_advertise_peer_urls ~ " -listen-peer-urls " ~ etcd.service.listen_peer_urls ~ " -initial-cluster-token " ~ etcd.service.initial_cluster_token ~ " -initial-cluster " ~ etcd.service.initial_cluster ~ " -initial-cluster-state " ~ etcd.service.initial_cluster_state ~ " -data-dir " ~ etcd.service.data_dir ~ " " ~ etcd.service.cmd_args ~ " --auto-tls=" ~ etcd.service.auto_tls ~ " --peer-auto-tls=" ~ etcd.service.peer_auto_tls %}
{% do etcd.docker.update({ 'cmd': "{0} {1}".format(etcd.command, args),}) %}
